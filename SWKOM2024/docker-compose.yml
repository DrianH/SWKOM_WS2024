services:
  springapp:
    container_name: springboot_container
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./uploads:/uploads  # Mount the uploads directory to persist files
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydatabase
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=mypassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update  # Optional: Automatically update DB schema
      - SPRING_JPA_DATABASE-PLATFORM=org.hibernate.dialect.PostgreSQLDialect  # Dialect for PostgreSQL
    depends_on:
      - db
    networks:
      - spring-boot-network

  db:
    image: postgres:14
    container_name: postgres_container
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist PostgreSQL data
    networks:
      - spring-boot-network

  adminer:
    image: adminer:latest
    container_name: adminer_container
    ports:
      - 8081:8080  # Adminer will be accessible on http://localhost:8081
    depends_on:
      - db
    networks:
      - spring-boot-network

  nginx:
    image: nginx:latest
    container_name: nginx_container
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount the custom NGINX configuration file
      - ./frontend:/usr/share/nginx/html  # Mount the frontend directory to serve static files
    ports:
      - 80:80  # Expose port 80 for HTTP traffic
    depends_on:
      - springapp
    networks:
      - spring-boot-network

networks:
  spring-boot-network:
    name: spring-boot-network
    driver: bridge

volumes:
  pgdata: